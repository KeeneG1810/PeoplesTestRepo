@model IEnumerable<PeopleAccountsManager.Models.Transaction>
@{
    ViewData["Title"] = "Transactions";
    var accountNumber = ViewData["AccountNumber"]?.ToString() ?? "Unknown";
    var personName = ViewData["PersonName"]?.ToString() ?? "Unknown";
    var accountId = (int)ViewData["AccountId"]!;
    var outstandingBalance = (decimal)ViewData["OutstandingBalance"]!;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <h1>
            <i class="bi bi-cash-stack"></i> Transactions
        </h1>
        <p class="text-muted mb-0">
            <i class="bi bi-wallet2"></i> Account: <strong>@accountNumber</strong><br />
            <i class="bi bi-person"></i> Person: <strong>@personName</strong><br />
            Outstanding Balance: 
            <span class="@(outstandingBalance < 0 ? "text-danger" : "text-success")">
                <strong>@outstandingBalance.ToString("C")</strong>
            </span>
        </p>
    </div>
    <div>
        <a asp-action="Create" asp-route-accountId="@accountId" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Add New Transaction
        </a>
        <a asp-controller="Accounts" asp-action="Details" asp-route-id="@accountId" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Account
        </a>
    </div>
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Transaction Date</th>
                <th>Capture Date</th>
                <th>Description</th>
                <th>Amount</th>
                <th style="width: 200px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Any())
            {
                decimal runningBalance = 0;
                @foreach (var transaction in Model)
                {
                    runningBalance += transaction.Amount;
                    <tr>
                        <td>@transaction.TransactionDate.ToString("yyyy-MM-dd")</td>
                        <td>@transaction.CaptureDate.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@transaction.Description</td>
                        <td class="@(transaction.Amount < 0 ? "text-danger" : "text-success")">
                            <strong>@transaction.Amount.ToString("C")</strong>
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@transaction.Code" class="btn btn-sm btn-info" title="View Details">
                                <i class="bi bi-eye"></i>
                            </a>
                            <a asp-action="Edit" asp-route-id="@transaction.Code" class="btn btn-sm btn-warning" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@transaction.Code" class="btn btn-sm btn-danger" title="Delete">
                                <i class="bi bi-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">
                        <em>No transactions found for this account</em>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Any())
{
    <div class="card mt-3">
        <div class="card-body">
            <h5 class="card-title">Summary</h5>
            <div class="row">
                <div class="col-md-3">
                    <strong>Total Transactions:</strong> @Model.Count()
                </div>
                <div class="col-md-3">
                    <strong>Total Credits:</strong> 
                    <span class="text-success">@Model.Where(t => t.Amount > 0).Sum(t => t.Amount).ToString("C")</span>
                </div>
                <div class="col-md-3">
                    <strong>Total Debits:</strong> 
                    <span class="text-danger">@Model.Where(t => t.Amount < 0).Sum(t => t.Amount).ToString("C")</span>
                </div>
                <div class="col-md-3">
                    <strong>Net Amount:</strong> 
                    <span class="@(Model.Sum(t => t.Amount) < 0 ? "text-danger" : "text-success")">
                        @Model.Sum(t => t.Amount).ToString("C")
                    </span>
                </div>
            </div>
        </div>
    </div>
}
