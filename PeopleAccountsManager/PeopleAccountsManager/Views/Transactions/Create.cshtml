@model PeopleAccountsManager.Models.Transaction
@{
    ViewData["Title"] = "Create Transaction";
    var accountNumber = ViewData["AccountNumber"]?.ToString() ?? "Unknown";
    var personName = ViewData["PersonName"]?.ToString() ?? "Unknown";
    var accountId = (int)ViewData["AccountId"]!;
}

<h1>
    <i class="bi bi-plus-circle"></i> Create New Transaction
</h1>

<p class="text-muted">
    <i class="bi bi-wallet2"></i> Account: <strong>@accountNumber</strong><br />
    <i class="bi bi-person"></i> Person: <strong>@personName</strong>
</p>

<div class="row">
    <div class="col-md-6">
        <div class="card shadow">
            <div class="card-body">
                <form asp-action="Create" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="AccountCode" />
                    
                    <div class="form-group mb-3">
                        <label asp-for="TransactionDate" class="control-label"></label>
                        <input asp-for="TransactionDate" class="form-control" type="date" />
                        <span asp-validation-for="TransactionDate" class="text-danger"></span>
                        <small class="form-text text-muted">Transaction date cannot be in the future</small>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label asp-for="Amount" class="control-label"></label>
                        <input asp-for="Amount" class="form-control" type="number" step="0.01" placeholder="Enter amount (positive for credit, negative for debit)" />
                        <span asp-validation-for="Amount" class="text-danger"></span>
                        <small class="form-text text-muted">
                            Enter positive values for credits (money in) or negative values for debits (money out).<br />
                            Amount cannot be zero.
                        </small>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label asp-for="Description" class="control-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter transaction description"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    
                    <div class="alert alert-info" role="alert">
                        <strong>Note:</strong> Capture date will be automatically set to the current date and time.
                        The account balance will be updated automatically.
                    </div>
                    
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-save"></i> Create
                        </button>
                        <a asp-action="Index" asp-route-accountId="@accountId" class="btn btn-secondary">
                            <i class="bi bi-x-circle"></i> Cancel
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card bg-light">
            <div class="card-body">
                <h5 class="card-title">Transaction Types</h5>
                <ul class="list-unstyled">
                    <li class="mb-2">
                        <span class="badge bg-success">Credit</span>
                        <strong>Positive Amount:</strong> Money coming in (e.g., deposits, payments received)
                    </li>
                    <li class="mb-2">
                        <span class="badge bg-danger">Debit</span>
                        <strong>Negative Amount:</strong> Money going out (e.g., withdrawals, payments made)
                    </li>
                </ul>
                <hr />
                <h6>Examples:</h6>
                <ul>
                    <li>Deposit: <strong class="text-success">+500.00</strong></li>
                    <li>Withdrawal: <strong class="text-danger">-200.00</strong></li>
                    <li>Payment Received: <strong class="text-success">+1000.00</strong></li>
                    <li>Bill Payment: <strong class="text-danger">-150.50</strong></li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
